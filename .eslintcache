[{"/home/matheuskerpen/Projetos/material-theme/src/index.tsx":"1","/home/matheuskerpen/Projetos/material-theme/src/App.tsx":"2","/home/matheuskerpen/Projetos/material-theme/src/components/AppBar.tsx":"3","/home/matheuskerpen/Projetos/material-theme/src/theme.tsx":"4","/home/matheuskerpen/Projetos/material-theme/src/components/butons.tsx":"5","/home/matheuskerpen/Projetos/material-theme/src/components/typographies.tsx":"6","/home/matheuskerpen/Projetos/material-theme/src/components/Inpupts.tsx":"7","/home/matheuskerpen/Projetos/material-theme/src/components/B2bRadio.tsx":"8"},{"size":219,"mtime":1609972122911,"results":"9","hashOfConfig":"10"},{"size":1465,"mtime":1610239045436,"results":"11","hashOfConfig":"10"},{"size":2656,"mtime":1610239084145,"results":"12","hashOfConfig":"10"},{"size":5132,"mtime":1610319065538,"results":"13","hashOfConfig":"10"},{"size":1931,"mtime":1610239211946,"results":"14","hashOfConfig":"10"},{"size":1979,"mtime":1610239218286,"results":"15","hashOfConfig":"10"},{"size":3027,"mtime":1610243751178,"results":"16","hashOfConfig":"10"},{"size":1090,"mtime":1610239182734,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"uftlr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/matheuskerpen/Projetos/material-theme/src/index.tsx",[],[],"/home/matheuskerpen/Projetos/material-theme/src/App.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/components/AppBar.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/theme.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/components/butons.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/components/typographies.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/components/Inpupts.tsx",["37","38"],"import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Card, FormControlLabel, TextField, Typography, Switch, RadioGroup, Checkbox } from '@material-ui/core';\nimport B2bRadio from \"./B2bRadio\";\n\nconst top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n]  \n\nexport default function Inputs(): React.ReactElement {\n    const [value, setValue] = React.useState('female');\n\n    const handleChangeRadioGroup = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    const [state, setState] = React.useState({\n        default: true,\n        disabled: true,\n    });\n\n    const handleChangeCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <Card>\n            <Typography variant=\"h5\" color=\"textPrimary\">Inputs</Typography>\n            <TextField label=\"Text input\" placeholder=\"Placeholder\" fullWidth={true} />\n            <TextField label=\"Text input\" placeholder=\"Placeholder\" fullWidth={true} disabled />\n            <TextField multiline rows={4} label=\"Text area\" placeholder=\"Placeholder\" fullWidth={true} />\n            <TextField multiline rows={4} label=\"Text area\" placeholder=\"Placeholder\" fullWidth={true} disabled />\n            <TextField select label=\"Select\" fullWidth={true} />\n            <TextField select label=\"Select\" fullWidth={true} disabled />\n            <Autocomplete\n                options={top100Films}\n                getOptionLabel={(option:any) => option.title}\n                // style={{ width: 300 }}\n                renderInput={(params:any) => <TextField fullWidth={true} {...params} label=\"Combo box\" />}\n            />\n            <FormControlLabel control={<Switch />} label=\"Switch\" />\n            <FormControlLabel control={<Switch />} label=\"Switch\" disabled />\n            <FormControlLabel control={<Switch checked={true} />} label=\"Switch\" disabled />\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChangeRadioGroup}>\n                <FormControlLabel value=\"female\" control={<B2bRadio />} label=\"hey\" />\n                <FormControlLabel value=\"other\" control={<B2bRadio />} label=\"Other\" />\n                <FormControlLabel value=\"disabled\" disabled control={<B2bRadio />} label=\"(Disabled option)\" />\n            </RadioGroup>\n            <FormControlLabel\n                control={<Checkbox checked={state.default} onChange={handleChangeCheckbox} name=\"default\" />}\n                label=\"Default\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.disabled} onChange={handleChangeCheckbox} name=\"disabled\" />}\n                label=\"Disabled\"\n                disabled={true}\n            />\n        </Card>\n    )\n}\n","/home/matheuskerpen/Projetos/material-theme/src/components/B2bRadio.tsx",[],[],{"ruleId":"39","severity":1,"message":"40","line":40,"column":41,"nodeType":"41","messageId":"42","endLine":40,"endColumn":44,"suggestions":"43"},{"ruleId":"39","severity":1,"message":"40","line":42,"column":38,"nodeType":"41","messageId":"42","endLine":42,"endColumn":41,"suggestions":"44"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["45","46"],["47","48"],{"messageId":"49","fix":"50","desc":"51"},{"messageId":"52","fix":"53","desc":"54"},{"messageId":"49","fix":"55","desc":"51"},{"messageId":"52","fix":"56","desc":"54"},"suggestUnknown",{"range":"57","text":"58"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"57","text":"59"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"60","text":"58"},{"range":"60","text":"59"},[1747,1750],"unknown","never",[1848,1851]]
[{"/home/matheuskerpen/Projetos/material-theme/src/index.tsx":"1","/home/matheuskerpen/Projetos/material-theme/src/App.tsx":"2","/home/matheuskerpen/Projetos/material-theme/src/components/AppBar.tsx":"3","/home/matheuskerpen/Projetos/material-theme/src/theme.tsx":"4","/home/matheuskerpen/Projetos/material-theme/src/components/B2bRadio.tsx":"5","/home/matheuskerpen/Projetos/material-theme/src/colections/butons.tsx":"6","/home/matheuskerpen/Projetos/material-theme/src/colections/Inpupts.tsx":"7","/home/matheuskerpen/Projetos/material-theme/src/colections/typographies.tsx":"8","/home/matheuskerpen/Projetos/material-theme/src/components/ComboxMultiCheckbox.tsx":"9","/home/matheuskerpen/Projetos/material-theme/src/components/table.tsx":"10"},{"size":219,"mtime":1609972122911,"results":"11","hashOfConfig":"12"},{"size":1576,"mtime":1610463319967,"results":"13","hashOfConfig":"12"},{"size":2656,"mtime":1610239084145,"results":"14","hashOfConfig":"12"},{"size":5936,"mtime":1610466031688,"results":"15","hashOfConfig":"12"},{"size":1090,"mtime":1610239182734,"results":"16","hashOfConfig":"12"},{"size":1931,"mtime":1610377456610,"results":"17","hashOfConfig":"12"},{"size":3092,"mtime":1610391966278,"results":"18","hashOfConfig":"12"},{"size":1638,"mtime":1610463156800,"results":"19","hashOfConfig":"12"},{"size":2839,"mtime":1610391882525,"results":"20","hashOfConfig":"12"},{"size":12344,"mtime":1610463842221,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"uftlr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/matheuskerpen/Projetos/material-theme/src/index.tsx",[],[],"/home/matheuskerpen/Projetos/material-theme/src/App.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/components/AppBar.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/theme.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/components/B2bRadio.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/colections/butons.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/colections/Inpupts.tsx",["45","46"],"import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Card, FormControlLabel, TextField, Typography, Switch, RadioGroup, Checkbox } from '@material-ui/core';\nimport B2bRadio from \"../components/B2bRadio\";\nimport CheckboxesTags from '../components/ComboxMultiCheckbox';\n\nconst top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n]  \n\nexport default function Inputs(): React.ReactElement {\n    const [value, setValue] = React.useState('female');\n\n    const handleChangeRadioGroup = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    const [state, setState] = React.useState({\n        default: true,\n        disabled: true,\n    });\n\n    const handleChangeCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <Card>\n            <Typography variant=\"h5\" color=\"textPrimary\">Inputs</Typography>\n            <TextField label=\"Text input\" placeholder=\"Placeholder\" fullWidth={true} />\n            <TextField label=\"Text input\" placeholder=\"Placeholder\" fullWidth={true} disabled />\n            <TextField multiline rows={4} label=\"Text area\" placeholder=\"Placeholder\" fullWidth={true} />\n            <TextField multiline rows={4} label=\"Text area\" placeholder=\"Placeholder\" fullWidth={true} disabled />\n            <TextField select label=\"Select\" fullWidth={true} />\n            <TextField select label=\"Select\" fullWidth={true} disabled />\n            <Autocomplete\n                options={top100Films}\n                getOptionLabel={(option:any) => option.title}\n                renderInput={(params:any) => <TextField fullWidth={true} {...params} label=\"Combo box\" />}\n            />\n            <CheckboxesTags />\n            <FormControlLabel control={<Switch />} label=\"Switch\" />\n            <FormControlLabel control={<Switch />} label=\"Switch\" disabled />\n            <FormControlLabel control={<Switch checked={true} />} label=\"Switch\" disabled />\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChangeRadioGroup}>\n                <FormControlLabel value=\"female\" control={<B2bRadio />} label=\"hey\" />\n                <FormControlLabel value=\"other\" control={<B2bRadio />} label=\"Other\" />\n                <FormControlLabel value=\"disabled\" disabled control={<B2bRadio />} label=\"(Disabled option)\" />\n            </RadioGroup>\n            <FormControlLabel\n                control={<Checkbox checked={state.default} onChange={handleChangeCheckbox} name=\"default\" />}\n                label=\"Default\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.disabled} onChange={handleChangeCheckbox} name=\"disabled\" />}\n                label=\"Disabled\"\n                disabled={true}\n            />\n        </Card>\n    )\n}\n","/home/matheuskerpen/Projetos/material-theme/src/colections/typographies.tsx",[],"/home/matheuskerpen/Projetos/material-theme/src/components/ComboxMultiCheckbox.tsx",["47"],"/* eslint-disable no-use-before-define */\n\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function CheckboxesTags() {\n  return (\n    <Autocomplete\n      multiple\n      id=\"checkboxes-tags-demo\"\n      options={top100Films}\n      disableCloseOnSelect\n      getOptionLabel={(option) => option.title}\n      renderOption={(option, { selected }) => (\n        <React.Fragment>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8 }}\n            checked={selected}\n          />\n          {option.title}\n        </React.Fragment>\n      )}\n      renderInput={(params) => (\n        <TextField {...params} fullWidth={true} label=\"Checkboxes\" placeholder=\"Favorites\" />\n      )}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'LÃ©on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n];\n","/home/matheuskerpen/Projetos/material-theme/src/components/table.tsx",["48","49"],{"ruleId":"50","severity":1,"message":"51","line":41,"column":41,"nodeType":"52","messageId":"53","endLine":41,"endColumn":44,"suggestions":"54"},{"ruleId":"50","severity":1,"message":"51","line":42,"column":38,"nodeType":"52","messageId":"53","endLine":42,"endColumn":41,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":13,"column":16,"nodeType":"58","messageId":"59","endLine":13,"endColumn":41},{"ruleId":"50","severity":1,"message":"51","line":69,"column":42,"nodeType":"52","messageId":"53","endLine":69,"endColumn":45,"suggestions":"60"},{"ruleId":"56","severity":1,"message":"57","line":244,"column":16,"nodeType":"58","messageId":"59","endLine":244,"endColumn":40},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["61","62"],["63","64"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType",["65","66"],{"messageId":"67","fix":"68","desc":"69"},{"messageId":"70","fix":"71","desc":"72"},{"messageId":"67","fix":"73","desc":"69"},{"messageId":"70","fix":"74","desc":"72"},{"messageId":"67","fix":"75","desc":"69"},{"messageId":"70","fix":"76","desc":"72"},"suggestUnknown",{"range":"77","text":"78"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"77","text":"79"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"80","text":"78"},{"range":"80","text":"79"},{"range":"81","text":"78"},{"range":"81","text":"79"},[1823,1826],"unknown","never",[1882,1885],[2265,2268]]